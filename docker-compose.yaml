version: "3.7"

services:
  blood:
    build:
      context: .
      dockerfile: blood/app.dockerfile
    depends_on:
      - blood_db
    environment:
      DATABASE_URL: postgres://argadev:123456@blood_db/argadev?sslmode=disable
    restart: on-failure

  role:
    build:
      context: .
      dockerfile: ./role/app.dockerfile
    depends_on:
      - role_db
    environment:
      DATABASE_URL: postgres://argadev:123456@role_db/argadev?sslmode=disable
    restart: on-failure

  gender:
    build:
      context: .
      dockerfile: ./gender/app.dockerfile
    depends_on:
      - gender_db
    environment:
      DATABASE_URL: postgres://argadev:123456@gender_db/argadev?sslmode=disable
    restart: on-failure

  disease:
    build:
      context: .
      dockerfile: ./disease/app.dockerfile
    depends_on:
      - disease_db
    environment:
      DATABASE_URL: http://disease_db:9200
    restart: on-failure

  user:
    build:
      context: .
      dockerfile: ./user/app.dockerfile
    depends_on:
      - user_db
    environment:
      DATABASE_URL: mongodb://user_db/medical?ssl=false
    restart: on-failure

  history:
    build:
      context: .
      dockerfile: ./history/app.dockerfile
    depends_on:
      - history_db
    environment:
      DATABASE_URL: postgres://argadev:123456@history_db/argadev?sslmode=disable
    restart: on-failure

  gateway:
    build:
      context: .
      dockerfile: ./gateway/app.dockerfile
    ports:
      - 8000:8080
    depends_on:
      - blood
      - disease
      - role
      - gender
      - user
      - history
    environment:
      BLOOD_SERVICE_URL: blood:8080
      ROLE_SERVICE_URL: role:8080
      GENDER_SERVICE_URL: gender:8080
      DISEASE_SERVICE_URL: disease:8080
      USER_SERVICE_URL: user:8080
      HISTORY_SERVICE_URL: history:8080
    restart: on-failure

  blood_db:
    build:
      context: ./blood
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: argadev
      POSTGRES_USER: argadev
      POSTGRES_PASSWORD: 123456
    restart: unless-stopped

  role_db:
    build:
      context: ./role
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: argadev
      POSTGRES_USER: argadev
      POSTGRES_PASSWORD: 123456
    restart: unless-stopped

  gender_db:
    build:
      context: ./gender
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: argadev
      POSTGRES_USER: argadev
      POSTGRES_PASSWORD: 123456
    restart: unless-stopped

  disease_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      discovery.type: single-node

  user_db:
    build:
      context: ./user
      dockerfile: ./db.dockerfile
    environment:
      MONGO_INITDB_DATABASE: user
      MONGO_INITDB_ROOT_USERNAME: argadev
      MONGO_INITDB_ROOT_PASSWORD: 123456
    restart: unless-stopped

  history_db:
    build:
      context: ./history
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: argadev
      POSTGRES_USER: argadev
      POSTGRES_PASSWORD: 123456
    restart: unless-stopped
