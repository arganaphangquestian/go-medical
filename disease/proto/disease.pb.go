// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.3
// source: disease.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Disease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Disease) Reset() {
	*x = Disease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disease) ProtoMessage() {}

func (x *Disease) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disease.ProtoReflect.Descriptor instead.
func (*Disease) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{0}
}

func (x *Disease) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Disease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Disease) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Disease) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Disease) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AddDiseaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddDiseaseRequest) Reset() {
	*x = AddDiseaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDiseaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiseaseRequest) ProtoMessage() {}

func (x *AddDiseaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiseaseRequest.ProtoReflect.Descriptor instead.
func (*AddDiseaseRequest) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{1}
}

func (x *AddDiseaseRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDiseaseRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddDiseaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disease *Disease `protobuf:"bytes,1,opt,name=Disease,proto3" json:"Disease,omitempty"`
}

func (x *AddDiseaseResponse) Reset() {
	*x = AddDiseaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDiseaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiseaseResponse) ProtoMessage() {}

func (x *AddDiseaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiseaseResponse.ProtoReflect.Descriptor instead.
func (*AddDiseaseResponse) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{2}
}

func (x *AddDiseaseResponse) GetDisease() *Disease {
	if x != nil {
		return x.Disease
	}
	return nil
}

type GetDiseaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetDiseaseRequest) Reset() {
	*x = GetDiseaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiseaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiseaseRequest) ProtoMessage() {}

func (x *GetDiseaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiseaseRequest.ProtoReflect.Descriptor instead.
func (*GetDiseaseRequest) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{3}
}

func (x *GetDiseaseRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetDiseaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diseases []*Disease `protobuf:"bytes,1,rep,name=Diseases,proto3" json:"Diseases,omitempty"`
}

func (x *GetDiseaseResponse) Reset() {
	*x = GetDiseaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiseaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiseaseResponse) ProtoMessage() {}

func (x *GetDiseaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiseaseResponse.ProtoReflect.Descriptor instead.
func (*GetDiseaseResponse) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{4}
}

func (x *GetDiseaseResponse) GetDiseases() []*Disease {
	if x != nil {
		return x.Diseases
	}
	return nil
}

type GetDiseaseByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDiseaseByIDRequest) Reset() {
	*x = GetDiseaseByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiseaseByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiseaseByIDRequest) ProtoMessage() {}

func (x *GetDiseaseByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiseaseByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDiseaseByIDRequest) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{5}
}

func (x *GetDiseaseByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDiseaseByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disease *Disease `protobuf:"bytes,1,opt,name=Disease,proto3" json:"Disease,omitempty"`
}

func (x *GetDiseaseByIDResponse) Reset() {
	*x = GetDiseaseByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_disease_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiseaseByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiseaseByIDResponse) ProtoMessage() {}

func (x *GetDiseaseByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_disease_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiseaseByIDResponse.ProtoReflect.Descriptor instead.
func (*GetDiseaseByIDResponse) Descriptor() ([]byte, []int) {
	return file_disease_proto_rawDescGZIP(), []int{6}
}

func (x *GetDiseaseByIDResponse) GetDisease() *Disease {
	if x != nil {
		return x.Disease
	}
	return nil
}

var File_disease_proto protoreflect.FileDescriptor

var file_disease_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x49, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x3e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52, 0x07, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73,
	0x65, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x40, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x08, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x73, 0x22, 0x27,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x07, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x32, 0xec, 0x01, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_disease_proto_rawDescOnce sync.Once
	file_disease_proto_rawDescData = file_disease_proto_rawDesc
)

func file_disease_proto_rawDescGZIP() []byte {
	file_disease_proto_rawDescOnce.Do(func() {
		file_disease_proto_rawDescData = protoimpl.X.CompressGZIP(file_disease_proto_rawDescData)
	})
	return file_disease_proto_rawDescData
}

var file_disease_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_disease_proto_goTypes = []interface{}{
	(*Disease)(nil),                // 0: proto.Disease
	(*AddDiseaseRequest)(nil),      // 1: proto.AddDiseaseRequest
	(*AddDiseaseResponse)(nil),     // 2: proto.AddDiseaseResponse
	(*GetDiseaseRequest)(nil),      // 3: proto.GetDiseaseRequest
	(*GetDiseaseResponse)(nil),     // 4: proto.GetDiseaseResponse
	(*GetDiseaseByIDRequest)(nil),  // 5: proto.GetDiseaseByIDRequest
	(*GetDiseaseByIDResponse)(nil), // 6: proto.GetDiseaseByIDResponse
}
var file_disease_proto_depIdxs = []int32{
	0, // 0: proto.AddDiseaseResponse.Disease:type_name -> proto.Disease
	0, // 1: proto.GetDiseaseResponse.Diseases:type_name -> proto.Disease
	0, // 2: proto.GetDiseaseByIDResponse.Disease:type_name -> proto.Disease
	1, // 3: proto.DiseaseService.AddDisease:input_type -> proto.AddDiseaseRequest
	3, // 4: proto.DiseaseService.GetDiseases:input_type -> proto.GetDiseaseRequest
	5, // 5: proto.DiseaseService.GetDiseaseByID:input_type -> proto.GetDiseaseByIDRequest
	2, // 6: proto.DiseaseService.AddDisease:output_type -> proto.AddDiseaseResponse
	4, // 7: proto.DiseaseService.GetDiseases:output_type -> proto.GetDiseaseResponse
	6, // 8: proto.DiseaseService.GetDiseaseByID:output_type -> proto.GetDiseaseByIDResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_disease_proto_init() }
func file_disease_proto_init() {
	if File_disease_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_disease_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disease_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDiseaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disease_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDiseaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disease_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiseaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disease_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiseaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disease_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiseaseByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_disease_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiseaseByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_disease_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_disease_proto_goTypes,
		DependencyIndexes: file_disease_proto_depIdxs,
		MessageInfos:      file_disease_proto_msgTypes,
	}.Build()
	File_disease_proto = out.File
	file_disease_proto_rawDesc = nil
	file_disease_proto_goTypes = nil
	file_disease_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DiseaseServiceClient is the client API for DiseaseService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiseaseServiceClient interface {
	AddDisease(ctx context.Context, in *AddDiseaseRequest, opts ...grpc.CallOption) (*AddDiseaseResponse, error)
	GetDiseases(ctx context.Context, in *GetDiseaseRequest, opts ...grpc.CallOption) (*GetDiseaseResponse, error)
	GetDiseaseByID(ctx context.Context, in *GetDiseaseByIDRequest, opts ...grpc.CallOption) (*GetDiseaseByIDResponse, error)
}

type diseaseServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDiseaseServiceClient(cc grpc.ClientConnInterface) DiseaseServiceClient {
	return &diseaseServiceClient{cc}
}

func (c *diseaseServiceClient) AddDisease(ctx context.Context, in *AddDiseaseRequest, opts ...grpc.CallOption) (*AddDiseaseResponse, error) {
	out := new(AddDiseaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DiseaseService/AddDisease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diseaseServiceClient) GetDiseases(ctx context.Context, in *GetDiseaseRequest, opts ...grpc.CallOption) (*GetDiseaseResponse, error) {
	out := new(GetDiseaseResponse)
	err := c.cc.Invoke(ctx, "/proto.DiseaseService/GetDiseases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diseaseServiceClient) GetDiseaseByID(ctx context.Context, in *GetDiseaseByIDRequest, opts ...grpc.CallOption) (*GetDiseaseByIDResponse, error) {
	out := new(GetDiseaseByIDResponse)
	err := c.cc.Invoke(ctx, "/proto.DiseaseService/GetDiseaseByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiseaseServiceServer is the server API for DiseaseService service.
type DiseaseServiceServer interface {
	AddDisease(context.Context, *AddDiseaseRequest) (*AddDiseaseResponse, error)
	GetDiseases(context.Context, *GetDiseaseRequest) (*GetDiseaseResponse, error)
	GetDiseaseByID(context.Context, *GetDiseaseByIDRequest) (*GetDiseaseByIDResponse, error)
}

// UnimplementedDiseaseServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiseaseServiceServer struct {
}

func (*UnimplementedDiseaseServiceServer) AddDisease(context.Context, *AddDiseaseRequest) (*AddDiseaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddDisease not implemented")
}
func (*UnimplementedDiseaseServiceServer) GetDiseases(context.Context, *GetDiseaseRequest) (*GetDiseaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiseases not implemented")
}
func (*UnimplementedDiseaseServiceServer) GetDiseaseByID(context.Context, *GetDiseaseByIDRequest) (*GetDiseaseByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiseaseByID not implemented")
}

func RegisterDiseaseServiceServer(s *grpc.Server, srv DiseaseServiceServer) {
	s.RegisterService(&_DiseaseService_serviceDesc, srv)
}

func _DiseaseService_AddDisease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDiseaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiseaseServiceServer).AddDisease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DiseaseService/AddDisease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiseaseServiceServer).AddDisease(ctx, req.(*AddDiseaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiseaseService_GetDiseases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiseaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiseaseServiceServer).GetDiseases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DiseaseService/GetDiseases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiseaseServiceServer).GetDiseases(ctx, req.(*GetDiseaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiseaseService_GetDiseaseByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDiseaseByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiseaseServiceServer).GetDiseaseByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DiseaseService/GetDiseaseByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiseaseServiceServer).GetDiseaseByID(ctx, req.(*GetDiseaseByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiseaseService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DiseaseService",
	HandlerType: (*DiseaseServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddDisease",
			Handler:    _DiseaseService_AddDisease_Handler,
		},
		{
			MethodName: "GetDiseases",
			Handler:    _DiseaseService_GetDiseases_Handler,
		},
		{
			MethodName: "GetDiseaseByID",
			Handler:    _DiseaseService_GetDiseaseByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "disease.proto",
}
